[tool.poetry]
authors = ["mmocchi"]
description = ""
name = "pycodemetrics"
readme = "README.md"
version = "0.1.0"

packages = [{include = "pycodemetrics", from = "src"}]

[tool.poetry.dependencies]
click = "^8.1.7"
cognitive-complexity = "^1.3.0"
pandas = "^2.2.2"
pandas-stubs = "^2.2.2.240603"
pydantic = "^2.8.2"
python = "^3.12"
radon = "^6.0.1"
tabulate = "^0.9.0"
tqdm = "^4.66.4"
types-tabulate = "^0.9.0.20240106"
types-tqdm = "^4.66.0.20240417"

[tool.poetry.group.dev.dependencies]
chardet = "^5.2.0"
mypy = "^1.11.0"
pytest = "^8.3.2"
taskipy = "^1.13.0"
pytest-mock = "^3.14.0"
ruff = "^0.5.5"

[tool.poetry.scripts]
pycodemetrics = "pycodemetrics.__main__:main"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests",]

[tool.taskipy.tasks]
test = "pytest tests"
mypy = "mypy src"
lint = "ruff check ."
summary = "python generate_project_summary.py"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I"]
ignore = ["E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.mypy]
ignore_missing_imports = true