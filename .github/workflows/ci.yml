# PR作成時のチェックを行うワークフロー
name: CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml'

permissions:
  contents: write
  checks: write
  pull-requests: write
  actions: read

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
    steps:
    # リポジトリをチェックアウト
    - uses: actions/checkout@v4

    # Pythonのセットアップ
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    # 依存関係のインストール
    - name: Install dependencies
      run: uv sync
    # toxでのテスト実行
    - name: Run tests with tox
      run: |
        PYTHON_VERSION=${{ matrix.python-version }}
        TOX_ENV="py${PYTHON_VERSION//./}"
        uv run tox -e $TOX_ENV
    # Python 3.13でのみカバレッジコメントを追加
    - name: Run tests for coverage report
      if: matrix.python-version == '3.13'
      run: |
        set -o pipefail
        uv run pytest tests/ --cov=src/ --junitxml=pytest.xml --cov-report=term-missing | tee pytest-coverage.txt
    # テストカバレッジをPRコメントとして追加
    - name: Pytest coverage comment
      if: matrix.python-version == '3.13'
      uses: MishaKav/pytest-coverage-comment@v1.1.57
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
  actions-timeline:
    needs: [test-python]
    runs-on: ubuntu-latest
    steps:
    - uses: Kesin11/actions-timeline@v2
